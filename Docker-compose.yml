version: '3.8'

services:
  mongo:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  user-service:
    build: ./user-service
    ports:
      - "4001:3001"
    depends_on:
      - mongo
    volumes:
      - ./user-service:/app
      - /app/node_modules
    networks:
      - app-network

  patient-service:
    build: ./patient-service
    ports:
      - "4002:3002"
    depends_on:
      - mongo
    volumes:
      - ./patient-service:/app
      - /app/node_modules
    networks:
      - app-network

  referral-service:
    build: ./referral-service
    ports:
      - "4003:3003"
    depends_on:
      - mongo
    volumes:
      - ./referral-service:/app
      - /app/node_modules
    networks:
      - app-network

  lab-service:
    build: ./lab-service
    ports:
      - "4004:3004"
    depends_on:
      - mongo
    volumes:
      - ./lab-service:/app
      - /app/node_modules
    networks:
      - app-network

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    depends_on:
      - sonardb
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://sonardb:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonarpassword
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    networks:
      - app-network

  sonardb:
    image: postgres:15-alpine
    container_name: sonarqube_db
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonarpassword
      POSTGRES_DB: sonar
    volumes:
      - postgresql:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  mongo-data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:

networks:
  app-network:
    driver: bridge